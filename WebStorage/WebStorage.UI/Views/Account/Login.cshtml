@model WebStorage.UI.Models.LoginModel
@using Microsoft.Owin.Security

@{
    ViewBag.Title = "Вход в Веб-хранилище";
    Layout = "~/Views/Shared/_LayoutAccount.cshtml";
}
@{
    Dictionary<String, String> templForBtn = new Dictionary<string, string>()
    {
        ["github"] = "github",
        ["facebook"] = "facebook",
        ["microsoft"] = "microsoft",
        ["vkontakte"] = "vk"
    };
}
@if (TempData["loginmessage"] != null)
{
    <div class="alert alert-info">@TempData["loginmessage"]</div>
}

<div class="logform">
    <h2>Вход в Веб-хранилище</h2>
    @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Name, "Логин", new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Пожалуйста, введите Ваш логин" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, "Пароль", new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Пожалуйста, введите Ваш пароль" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-5 col-md-offset-4">
                <input type="submit" value="Войти" class="btn btn-danger" />
                <div class="btn-group" data-toggle="buttons">
                    <label class="btn btn-warning active">
                        <span class="glyphicon glyphicon-check"></span>
                        @Html.CheckBoxFor(m => m.remember, new { @class = "checkbox-inline", autocomplete = "off" }) Запомнить
                    </label>
                </div>
                @Html.Label("Еще нет акаунта?")
                <strong>
                    <ins>
                    @Html.ActionLink("Регистрация", "Create", "Manager", null, new { style = "color:coral" })
                    </ins>
                </strong>
                </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-md-offset-4">
            @Html.Label("Или войдите с помощью")
                @{
                    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
                    foreach (var p in loginProviders)
                    {
                        <div class="form-container">
                            @using (Html.BeginForm("ExtLogin", "Account"))
                            {
                                string templ = p.AuthenticationType.ToLowerInvariant();
                                if (templForBtn.ContainsKey(templ))
                                {
                                    @Html.AntiForgeryToken()
                                    <button class="btn btn-social-icon btn-@templForBtn[templ]"
                                            type="submit" name="provider" value="@p.AuthenticationType">
                                        @{
                                            if (templForBtn[templ] == "microsoft")
                                            { templForBtn[templ] = "windows"; }

                                        }
                                        <span class="fa fa-@templForBtn[templ]" />
                                    </button>
                                }
                            }
                        </div>
                    }
                }
            </div>
        </div>
    }
</div>
