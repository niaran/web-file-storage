@model WebStorage.UI.Models.UserViewModel

@{
    ViewBag.Title = "Регистрация";
    Layout = "~/Views/Shared/_LayoutAccount.cshtml";
}

@if (TempData["loginmessage"] != null)
{
    <div class="alert alert-info">@TempData["loginmessage"]</div>
}

<div class="logform">
    <h2>Регистрация</h2>
    @using (Html.BeginForm("Create", "Manager", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "col-md-4 control-label" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "Пожалуйста, введите Логин:" })
                </div>
                <strong style="color:red">
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "col-md-offset-1" })
                </strong>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Пожалуйста, введите Е-мейл" })
                </div>
                <strong style="color:red">
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "col-md-offset-1" })
                </strong>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                    @Html.PasswordFor(x => x.Password, new { @class = "form-control", placeholder = "Пожалуйста, введите Пароль:" })
                </div>
                <strong style="color:red">
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "col-md-offset-1" })
                </strong>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                    @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", placeholder = "Пожалуйста, введите Подтверждение пароля:" })
                </div>
                <strong style="color:red">
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "col-md-offset-1" })
                </strong>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-5 col-md-offset-4">
                @ViewBag.ReCaptcha
                @if (ViewBag.RecaptchaLastErrors != null)
                {
                    <div>Недопустимая reCAPTCHA</div>
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-5 col-md-offset-4">
                <button type="submit" class="btn btn-danger">Зарегистрироваться</button>
                @Html.ActionLink("Отмена", "Login", "Account", null, new { @class = "btn btn-default" })
            </div>
        </div>
    }
</div>